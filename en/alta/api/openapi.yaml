openapi: '3.0.0'

info:
  description: ''
  version: '2210'
  title: 'Cesbo Alta'
  x-logo:
    url: 'https://cdn.cesbo.com/logo.svg'
    altText: Cesbo Logo

externalDocs:
  description: More about Cesbo Alta
  url: https://cesbo.com/en/alta

tags:
  - name: Config
    description: Manage whole configuration
  - name: Servers
    description: Manage HTTP servers
  - name: OTT Archives
  - name: OTT Authorizers
  - name: OTT Channels
  - name: Users
    description: Manage system users

paths:
  /api/config:
    get:
      tags:
        - Config
      summary: Download configuration file
      description: ''
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
    put:
      tags:
        - Config
      summary: Upload configuration file
      description: ''
      requestBody:
        description: Configuration file
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      responses:
        '204':
          description: Successful
        '422':
          description: Invalid input

  /api/servers:
    get:
      tags:
        - Servers
      summary: Finds Server by ID
      description: ''
      parameters:
        - in: query
          name: id
          description: Server ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
        '400':
          description: Invalid Server ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Server not found
    post:
      tags:
        - Servers
      summary: Creates Server
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCreate'
      responses:
        '204':
          description: Server created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Server already exists
        '422':
          description: Invalid input
    put:
      tags:
          - Servers
      summary: Updates Server
      description: ''
      parameters:
        - in: query
          name: id
          description: Server ID
          required: true
          schema:
            type: string
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid Server ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Server not found
        '422':
          description: Invalid input
    delete:
      tags:
        - Servers
      summary: Deletes Server
      description: ""
      parameters:
        - in: query
          name: id
          description: Server ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid Server ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Server not found

  /api/ott/archives:
    get:
      tags:
        - OTT Archives
      summary: Finds OTT Archive by ID
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Archive ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttArchive'
        '400':
          description: Invalid OTT Archive ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Archive not found
    post:
      tags:
        - OTT Archives
      summary: Creates OTT Archive
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttArchiveCreate'
      responses:
        '204':
          description: OTT Archive created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: OTT Archive already exists
        '422':
          description: Invalid input
    put:
      tags:
          - OTT Archives
      summary: Updates OTT Archive
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Archive ID
          required: true
          schema:
            type: string
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttArchive'
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Archive ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Archive not found
        '422':
          description: Invalid input
    delete:
      tags:
        - OTT Archives
      summary: Deletes OTT Archive
      description: ""
      parameters:
        - in: query
          name: id
          description: OTT Archive ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Archive ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Archive not found

  /api/ott/authorizers:
    get:
      tags:
        - OTT Authorizers
      summary: Finds OTT Authorizer by ID
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Authorizer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttAuthorizer'
        '400':
          description: Invalid OTT Authorizer ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Authorizer not found
    post:
      tags:
        - OTT Authorizers
      summary: Creates OTT Authorizer
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttAuthorizerCreate'
      responses:
        '204':
          description: OTT Authorizer created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: OTT Authorizer already exists
        '422':
          description: Invalid input
    put:
      tags:
          - OTT Authorizers
      summary: Updates OTT Authorizer
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Authorizer ID
          required: true
          schema:
            type: string
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttAuthorizer'
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Authorizer ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Authorizer not found
        '422':
          description: Invalid input
    delete:
      tags:
        - OTT Authorizers
      summary: Deletes OTT Authorizer
      description: ""
      parameters:
        - in: query
          name: id
          description: OTT Authorizer ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Authorizer ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Authorizer not found

  /api/ott/channels:
    get:
      tags:
        - OTT Channels
      summary: Finds OTT Channel by ID
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Channel ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttChannel'
        '400':
          description: Invalid OTT Channel ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Channel not found
    post:
      tags:
        - OTT Channels
      summary: Creates OTT Channel
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttChannelCreate'
      responses:
        '204':
          description: OTT Channel created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: OTT Channel already exists
        '422':
          description: Invalid input
    put:
      tags:
          - OTT Channels
      summary: Updates OTT Channel
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Channel ID
          required: true
          schema:
            type: string
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OttChannel'
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Channel ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Channel not found
        '422':
          description: Invalid input
    delete:
      tags:
        - OTT Channels
      summary: Deletes OTT Channel
      description: ""
      parameters:
        - in: query
          name: id
          description: OTT Channel ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Channel ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Channel not found

  /api/ott/channels/start:
    post:
      tags:
          - OTT Channels
      summary: Starts OTT Channel
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Channel ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Channel ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Channel not found

  /api/ott/channels/stop:
    post:
      tags:
          - OTT Channels
      summary: Stops OTT Channel
      description: ''
      parameters:
        - in: query
          name: id
          description: OTT Channel ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid OTT Channel ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: OTT Channel not found

  /api/users:
    get:
      tags:
        - Users
      summary: Finds User by ID
      description: ''
      parameters:
        - in: query
          name: id
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid User ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
    post:
      tags:
        - Users
      summary: Creates User
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
      responses:
        '204':
          description: User created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: User already exists
        '422':
          description: Invalid input
    put:
      tags:
          - Users
      summary: Updates User
      description: ''
      parameters:
        - in: query
          name: id
          description: User ID
          required: true
          schema:
            type: string
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdate'
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid User ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found
        '422':
          description: Invalid input
    delete:
      tags:
        - Users
      summary: Deletes User
      description: ""
      parameters:
        - in: query
          name: id
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successful
        '400':
          description: Invalid User ID
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: User not found

  /api/login:
    post:
      tags:
        - Users
      summary: Creates User session
      description: ''
      requestBody:
          description: ''
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
      security: []
      responses:
        '204':
          description: Logged in
          headers:
            Set-Cookie:
              schema:
                type: string
                example: auth=admin:xxxxxx; Path=/api; HttpOnly; Secure; SameSite=None
        '403':
          description: Forbidden
        '422':
          description: Invalid input

  /api/logout:
    post:
      tags:
        - Users
      summary: Removes User session
      description: ''
      security: []
      responses:
        '204':
          description: Logged out
          headers:
            Set-Cookie:
              schema:
                type: string
                example: auth=; Path=/api; Max-Age=0; HttpOnly; Secure; SameSite=None

components:
  schemas:
    Config:
      type: object
      properties:
        servers:
          type: object
          properties:
            example-server:
              $ref: '#/components/schemas/Server'
        users:
          type: object
          properties:
            example-user:
              $ref: '#/components/schemas/UserConfig'
        ott:
          type: object
          properties:
            db:
              type: string
              example: /opt/archive.sqlite
              description: Path to the OTT archive database
            archives:
              type: object
              properties:
                example-archive:
                  $ref: '#/components/schemas/OttArchive'
            authorizers:
              type: object
              properties:
                example-authorizer:
                  $ref: '#/components/schemas/OttAuthorizer'
            channels:
              type: object
              properties:
                example/hd:
                  $ref: '#/components/schemas/OttChannel'

    Server:
      type: object
      required:
        - listen
      properties:
        listen:
          type: string
          example: :4000
          description: Listening host and port. If host is not defined will be listen on any interface
        crt_chain:
          type: string
          example: /etc/dehydrated/certs/example.com/fullchain.pem
          description: Full path to the file with the certificate in the PEM format
        crt_key:
          type: string
          example: /etc/dehydrated/certs/example.com/privkey.pem
          description: Full path to the file with the secret key in the PEM format
        allow_origin:
          type: array
          items:
            type: string
          default:
            - alta.cesbo.com
        server_tokens:
          type: string
          default: Alta/version
        read_timeout:
          type: int
          min: 1
          description: Maximum duration for reading the entire request, including the body
          default: 2
        write_timeout:
          type: int
          min: 1
          description: Maximum duration before timing out writes of the response
          default: 10
        idle_timeout:
          type: int
          min: 1
          description: Maximum amount of time to wait for the next request when keep-alives are enabled
          default: 10
        connlimit:
          type: int
          min: 1
          description: Limit concurrent connections
          default: 5000
        serve:
          type: string
          enum:
            - api
            - ott
          description: Use server with specific module

    ServerCreate:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: Server ID
              example: example-server
        - $ref: '#/components/schemas/Server'

    OttArchive:
      type: object
      required:
        - duration
      properties:
        duration:
          type: integer
          min: 1
          example: 1
          description: Archive duration in seconds
        local:
          type: string
          example: /opt/storage
          description: Path to the storage directory

    OttArchiveCreate:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: OTT Archive ID
              example: example-archive
        - $ref: '#/components/schemas/OttArchive'

    OttAuthorizer:
      type: object
      properties:
        ip:
          type: array
          description: list of rules with ip/net addresses
          items:
            type: string
            example: allow 192.168.0.0/24
        securetoken:
          type: string
          example: secret
          description: token for secure authorization
        backend:
          type: array
          description: list of backend URL
          items:
            type: string
            example: http://127.0.0.1/auth.php
        default:
          type: string
          enum:
            - allow
            - deny
            - pass
          description: >
            Authorizer action
            * `allow` - allow access
            * `deny` - deny access
            * `pass` - skip to next authorizer
          default: allow

    OttAuthorizerCreate:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: OTT Authorizer ID
              example: example-authorizer
        - $ref: '#/components/schemas/OttAuthorizer'

    OttChannel:
      type: object
      properties:
        enable:
          type: boolean
          example: true
        name:
          type: string
          example: Channel Name
        archive:
          type: string
          example: example-archive
          description: OTT Archive ID
        duration:
          type: integer
          min: 0
          example: 1
          description: Redefine archive duration in hours
        index:
          type: string
          description: master m3u8 file name
          default: index
        media_access:
          type: string
          example: media
          description: m3u8 file name with live segments to direct access to media. By the default turned off
        vod_access:
          type: string
          example: vod
          description: m3u8 file name with archive segments to direct access to media. By the default turned off
        authorizer:
          type: string
          example: example-authorizer
          description: OTT Authorizer ID
        address:
          type: string
          example: http://example.com/live.m3u8
          description: source address. This is temporary option will be removed in next releases

    OttChannelCreate:
      allOf:
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              description: OTT Channel ID
              example: channel/hd
        - $ref: '#/components/schemas/OttChannel'

    User:
      type: object
      properties:
        enable:
          type: boolean
          example: true
        role:
          type: string
          enum:
            - admin
            - observer
            - anonymous
          example: admin
          description: >
            User roles
            * `admin` - full access
            * `observer` - read-only access
            * `anonymous` - access forbidden

    UserUpdate:
      allOf:
        - type: object
          required:
            - password
          properties:
            password:
              type: string
              description: User Password
              example: xxxxxx
        - $ref: '#/components/schemas/User'

    UserCreate:
      allOf:
        - type: object
          required:
            - login
          properties:
            login:
              type: string
              description: User Login
              example: example-user
        - $ref: '#/components/schemas/UserUpdate'

    UserConfig:
      allOf:
        - type: object
          required:
            - token
          properties:
            token:
              type: string
              description: Encrypted password
              example: xxxxxx
        - $ref: '#/components/schemas/User'

    UserLogin:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
          description: User Login
          example: example-user
        password:
          type: string
          description: User Password
          example: xxxxxx
        remember:
          type: boolean
          description: Remember cookie for 30 days
          example: false
