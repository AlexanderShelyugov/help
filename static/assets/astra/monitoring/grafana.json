{
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 12,
  "iteration": 1619699905328,
  "links": [],
  "panels": [
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "Average CPU usage.\nThe System CPU usage is for all cores. Max value is number of cores multiplied by 100\nThe App CPU usage is for all threads on all cores and relative to System CPU usage.",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 1,
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 0,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 31,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null as zero",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.5.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": true,
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "fields = [\"sys_cpu\", \"app_cpu\"]\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"sysinfo\" and contains(value: r._field, set: fields))\r\n|> aggregateWindow(every: v.windowPeriod, fn: mean)\r\n|> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "CPU Usage",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:178",
          "decimals": 0,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:179",
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "The System Memory Usage - is total memory usage by all processes\nThe App Memory Usage - is total memory usage by all threads. Value is relative to total system momory",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 6,
        "x": 6,
        "y": 0
      },
      "hiddenSeries": false,
      "id": 33,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null as zero",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.5.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": true,
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "fields = [\"sys_mem\", \"app_mem\"]\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"sysinfo\" and contains(value: r._field, set: fields))\r\n|> aggregateWindow(every: v.windowPeriod, fn: mean)\r\n|> yield(name: \"mean\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Memory Usage",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:288",
          "decimals": 0,
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:289",
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "datasource": null,
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 4,
        "x": 12,
        "y": 0
      },
      "id": 18,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "text": {},
        "textMode": "value_and_name"
      },
      "pluginVersion": "7.5.4",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"date\"\r\nfields = [\"app_uptime\", \"sys_uptime\"]\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"sysinfo\" and contains(value: r._field, set: fields))\r\n|> map(fn: (r) => ({\r\n    r with\r\n        _value: string(\r\n            v: duration(\r\n                v: uint(\r\n                    v: date.truncate(\r\n                        t: time(\r\n                            v: uint(v: r._value) * uint(v: 60000000000)\r\n                        ),\r\n                        unit: if r._value >= 10080 then 1d else if r._value >= 1440 then 1h else 1m,\r\n                    )\r\n                )\r\n            )\r\n        ),\r\n}))\r\n|> aggregateWindow(every: v.windowPeriod, fn: last)\r\n|> yield(name: \"last\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "fields = [\"la1\", \"la5\", \"la15\"]\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"sysinfo\" and contains(value: r._field, set: fields))\r\n|> aggregateWindow(every: v.windowPeriod, fn: last)\r\n|> yield(name: \"last\")\r\n",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Status",
      "transformations": [
        {
          "id": "seriesToColumns",
          "options": {
            "byField": "Time"
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true
            },
            "indexByName": {
              "Time": 0,
              "app_uptime sysinfo": 1,
              "la1 sysinfo": 3,
              "la15 sysinfo": 5,
              "la5 sysinfo": 4,
              "sys_uptime sysinfo": 2
            },
            "renameByName": {
              "app_uptime sysinfo": "App Uptime",
              "la1 sysinfo": "LA 1m",
              "la15 sysinfo": "LA 15m",
              "la5 sysinfo": "LA 5m",
              "sys_uptime sysinfo": "Sys Uptime"
            }
          }
        }
      ],
      "type": "stat"
    },
    {
      "datasource": null,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": null,
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 16,
      "options": {
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "7.5.4",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "import \"date\"\r\n\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"stream\")\r\n|> drop(columns: [\"_measurement\", \"_start\", \"_stop\", \"id\"])\r\n|> pivot(rowKey: [\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n|> filter(fn: (r) => r.active == true and r.onair == false)\r\n|> sort(columns: [\"_time\"], desc: true)\r\n|> limit(n: 1)\r\n|> map(fn: (r) => ({\r\n    r with\r\n        elapsed:\r\n            uint(v: date.truncate(t: now(), unit: 1m)) -\r\n            uint(v: date.truncate(t: r._time, unit: 1m)),\r\n}))\r\n|> drop(columns: [\"_time\", \"active\", \"onair\", \"packets\"])\r\n|> group()\r\n|> sort(columns: [\"elapsed\"])\r\n|> map(fn: (r) => ({\r\n    r with\r\n        elapsed: string(v: duration(v: r.elapsed)),\r\n}))\r\n|> yield(name: \"last\")\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Failed Streams",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "bitrate": 7,
              "cc_error": 3,
              "elapsed": 1,
              "name": 0,
              "pes_error": 5,
              "sc_error": 6,
              "sessions": 2,
              "sync_error": 4
            },
            "renameByName": {
              "bitrate": "Bitrate (KBit/s)",
              "cc_error": "CC Errors",
              "elapsed": "Elapsed Time",
              "name": "Name",
              "pes_error": "PES Errors (%)",
              "sc_error": "Scrambled (%)",
              "scrambled": "Scrambled (%)",
              "sessions": "Sessions",
              "sync_error": "Sync Errors"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "hiddenSeries": false,
      "id": 13,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.5.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeat": "adapter",
      "scopedVars": {
        "adapter": {
          "selected": true,
          "text": "",
          "value": ""
        }
      },
      "seriesOverrides": [
        {
          "alias": "unc",
          "yaxis": 2
        },
        {
          "alias": "ber",
          "yaxis": 2
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "fields = [\"signal\", \"snr\", \"ber\", \"unc\"]\nfrom(bucket: \"${bucket}\")\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n|> filter(fn: (r) => r._measurement == \"adapter\" and r.name == \"${adapter}\")\n|> filter(fn: (r) => contains(value: r._field, set: fields))\n|> drop(columns: [\"id\", \"name\"])\n|> aggregateWindow(every: v.windowPeriod, fn: mean)\n|> yield(name: \"mean\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "${adapter}",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:64",
          "format": "percent",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:65",
          "decimals": 0,
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": 100
      }
    },
    {
      "aliasColors": {
        "pes_error": "dark-red",
        "sync_error": "light-red"
      },
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": null,
      "description": "",
      "fieldConfig": {
        "defaults": {},
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "alignAsTable": false,
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.5.4",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeat": "stream",
      "repeatDirection": "h",
      "scopedVars": {
        "stream": {
          "selected": true,
          "text": "",
          "value": ""
        }
      },
      "seriesOverrides": [
        {
          "alias": "sync_error",
          "yaxis": 2
        },
        {
          "alias": "pes_error",
          "yaxis": 2
        },
        {
          "alias": "cc_error",
          "yaxis": 2
        },
        {
          "alias": "sc_error",
          "yaxis": 2
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "fields = [\"bitrate\", \"sync_error\", \"pes_error\", \"cc_error\", \"sc_error\"]\r\nfrom(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"stream\" and r.name == \"${stream}\" and contains(value: r._field, set: fields))\r\n|> keep(columns: [\"_time\", \"_field\", \"_value\"])\r\n|> aggregateWindow(every: v.windowPeriod, fn: mean)\r\n|> yield(name: \"mean\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [
        {
          "$$hashKey": "object:2861",
          "colorMode": "critical",
          "fill": true,
          "line": true,
          "op": "lt",
          "value": 300,
          "yaxis": "left"
        }
      ],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "${stream}",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [],
      "transparent": true,
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:360",
          "format": "KBs",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "$$hashKey": "object:361",
          "decimals": 0,
          "format": "short",
          "label": "",
          "logBase": 1,
          "max": null,
          "min": "0",
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": false,
  "schemaVersion": 27,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "SOURCE",
        "multi": false,
        "name": "datasource",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "",
          "value": ""
        },
        "datasource": "${datasource}",
        "definition": "buckets()",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "BUCKET",
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": [],
          "value": []
        },
        "datasource": "${datasource}",
        "definition": "from(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"adapter\")\r\n|> keyValues(keyColumns: [\"name\"])\r\n|> group()\r\n|> keep(columns: [\"name\"])",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "ADAPTER",
        "multi": true,
        "name": "adapter",
        "options": [],
        "query": "from(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"adapter\")\r\n|> keyValues(keyColumns: [\"name\"])\r\n|> group()\r\n|> keep(columns: [\"name\"])",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": [],
          "value": []
        },
        "datasource": "${datasource}",
        "definition": "from(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"stream\")\r\n|> keyValues(keyColumns: [\"name\"])\r\n|> group()\r\n|> keep(columns: [\"name\"])",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "STREAM",
        "multi": true,
        "name": "stream",
        "options": [],
        "query": "from(bucket: \"${bucket}\")\r\n|> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n|> filter(fn: (r) => r._measurement == \"stream\")\r\n|> keyValues(keyColumns: [\"name\"])\r\n|> group()\r\n|> keep(columns: [\"name\"])",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "1m",
      "5m",
      "15m"
    ]
  },
  "timezone": "",
  "title": "",
  "uid": "",
  "version": 1
}
